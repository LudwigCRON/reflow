#!/usr/bin/env python3
# coding: utf-8

import os
import sys
import doit

# assume the run utility is placed in the envs/bin/ directory
ENVBIN_DIR = os.path.dirname(os.path.realpath(__file__))
# define the path where is stored the flow
REFLOW_DIR = os.environ["REFLOW"]
sys.path.append(REFLOW_DIR)

import common.tools
import common.config
import common.utils as utils

# configure doit
DOIT_CONFIG = utils.doit.DOIT_CONFIG


def set_env_vars(config: utils.db.Vault) -> None:
    # normalize execution path
    current_dir = utils.normpath(os.getcwd())
    project_name = str(config.get("project", {}).get("name", ""))
    work_dir_prefix = str(config.get("work_dir_prefix", ".tmp"))
    if project_name in current_dir:
        project_dir = current_dir[: current_dir.find(project_name) + len(project_name)]
    else:
        project_dir = os.path.dirname(common.config.locate_project_yaml(current_dir))
    # set environment variable to be used by tools
    env_vars = {
        "PROJECT": project_name,
        "PROJECT_DIR": project_dir,
        "CURRENT_DIR": current_dir,
        "WORK_DIR_PREFIX": work_dir_prefix,
    }
    for k, v in env_vars.items():
        os.environ[k] = v


def main():
    # load selected tools by project.yaml
    common.config.load_config(REFLOW_DIR, os.getcwd())
    for tool_name in common.config.vault.get("tools", []):
        common.tools.load_tool(tool_name)
    set_env_vars(common.config.vault)

    for binding_name in common.config.vault.get("bind", {}):
        globals()[binding_name] = common.config.vault.bind.get(binding_name)

    # execute task selected
    doit.run(globals())


if __name__ == "__main__":
    main()
